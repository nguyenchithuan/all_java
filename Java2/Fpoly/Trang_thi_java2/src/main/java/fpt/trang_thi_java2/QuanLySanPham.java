package fpt.trang_thi_java2;

import java.awt.Color;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class QuanLySanPham extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form QuanLySanPham
     */
    public QuanLySanPham() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTieuDe = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        cboDonVi = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnGhi = new javax.swing.JButton();
        btnMo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        lblThoiGian = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblTieuDe.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTieuDe.setText("QUAN LY SAN PHAM   ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Ten san pham");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Don vi tinh");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Gon gia");

        txtTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cboDonVi.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cboDonVi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setText("Them");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnGhi.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGhi.setText("Ghi");
        btnGhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhiActionPerformed(evt);
            }
        });

        btnMo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnMo.setText("Mo");
        btnMo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ten san pham", "Don vi tinh", "Don gia", "Trang thi"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        lblThoiGian.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblThoiGian.setText("Thoi gian");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                            .addComponent(txtDonGia)
                            .addComponent(cboDonVi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGhi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThoiGian)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTieuDe)
                    .addComponent(lblThoiGian))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGhi))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnMo)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null);

        cboDonVi.removeAllItems();
        cboDonVi.addItem("Cai");
        cboDonVi.addItem("Chiec");

        SanPham sp1 = new SanPham("Giay", "Chiec", 12343.2);
        SanPham sp2 = new SanPham("Dep", "Chiec", 122.2);
        SanPham sp3 = new SanPham("Quan", "Cai", 55343.2);
        SanPham sp4 = new SanPham("Ao", "Cai", 143.2);

        list.add(sp1);
        list.add(sp2);
        list.add(sp3);
        list.add(sp4);

        fillTable();

        tbl.setRowSelectionInterval(2, 2);
        writeForm(list.get(2));
        startTime = System.currentTimeMillis() / 1000;
    }//GEN-LAST:event_formWindowOpened

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        // TODO add your handling code here:
        writeForm(list.get(indexTable()));
    }//GEN-LAST:event_tblMouseClicked

    private void btnGhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhiActionPerformed
        // TODO add your handling code here:
        this.add();
    }//GEN-LAST:event_btnGhiActionPerformed

    private void btnMoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoActionPerformed
        // TODO add your handling code here:
        docFile();
        tbl.setRowSelectionInterval(0, 0);
        writeForm(list.get(0));
    }//GEN-LAST:event_btnMoActionPerformed

    //------------------------------------------main-------------------------------------------
    ArrayList<SanPham> list = new ArrayList<>();
    long startTime, endTime;

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        QuanLySanPham ql = new QuanLySanPham();
        ql.setVisible(true);
        Thread th = new Thread(ql);
        th.start();
    }

    @Override
    public void run() {
        while (true) {
            String chuoi = lblTieuDe.getText();
            String dau = chuoi.substring(0, 1);
            chuoi = chuoi.substring(1) + dau;
            
            lblTieuDe.setText(chuoi);
            
            //------------------------------------------------
            endTime = System.currentTimeMillis() / 1000;
            int tong = (int) (endTime - startTime);
            int h, m, s;
            h = tong / 3600;
            m = tong % 3600;
            s = m % 60;
            m = m / 60;
            lblThoiGian.setText("Thoi gian " + h + ":" + m + ":" + s);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
            }
        }
    }

    

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        model.setRowCount(0);
        for (SanPham sanPham : list) {
            model.addRow(new Object[]{
                sanPham.getTenSp(), sanPham.getDvt(), sanPham.getDonGia(), sanPham.getStatus()
            });
        }
    }

    public void clearForm() {
        txtTenSanPham.setText("");
        txtDonGia.setText("");
        cboDonVi.setSelectedIndex(0);
    }

    public SanPham readForm() {
        SanPham sp = new SanPham();
        sp.setTenSp(txtTenSanPham.getText());
        sp.setDonGia(Double.parseDouble(txtDonGia.getText()));
        sp.setDvt(cboDonVi.getSelectedItem() + "");
        return sp;
    }

    public void writeForm(SanPham sp) {
        txtTenSanPham.setText(sp.getTenSp());
        txtDonGia.setText(sp.getDonGia() + "");
        for (int i = 0; i < cboDonVi.getItemCount(); i++) {
            if (cboDonVi.getItemAt(i).equalsIgnoreCase(sp.getDvt())) {
                cboDonVi.setSelectedIndex(i);
                break;
            }
        }
    }
    
    public void add() {
        if(kiemTraTen() == false) {
            txtTenSanPham.requestFocus();
            txtTenSanPham.setBackground(Color.YELLOW);
        } else if(kiemTraGia() == false) {
            txtDonGia.requestFocus();
            txtDonGia.setBackground(Color.YELLOW);
        } else {
            list.add(readForm());
            fillTable();
            JOptionPane.showMessageDialog(this, "Them thanh cong");
            ghiFile();
        }
    }
    
    public boolean kiemTraTen() {
        String dinhDang = "[a-zA-Z ]+";
        if(txtTenSanPham.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ten null");
            return false;
        } else if(txtTenSanPham.getText().matches(dinhDang) == false) {
            JOptionPane.showMessageDialog(this, "Ten khong dung!");
            return false;
        }
        
        txtTenSanPham.setBackground(Color.WHITE);
        return true;
    }
    
    public boolean kiemTraGia() {
        
        if(txtDonGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Gia null");
            return false;
        }
        
        Double gia;
        
        try {
            gia = Double.parseDouble(txtDonGia.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gia khong dung dinh dang!");
            return false;
        }
        
        if(gia <= 0) {
            JOptionPane.showMessageDialog(this, "Gia > 0");
            return false;
        }
        txtDonGia.setBackground(Color.WHITE);
        return true;
    }

    public int indexTable() {
        return tbl.getSelectedRow();
    }
    
    
    public void ghiFile() {
        try {
            JFileChooser jc = new JFileChooser();
            int chon = jc.showSaveDialog(this);
            if (chon == 0) {
                String path = jc.getSelectedFile().getPath();
                FileOutputStream fo = new FileOutputStream(path);
                ObjectOutputStream ofo = new ObjectOutputStream(fo);
                ofo.writeObject(list);
                ofo.close();

                DefaultTableModel model = (DefaultTableModel) tbl.getModel();
                model.setRowCount(0);
                JOptionPane.showMessageDialog(this,  "Ghi file thanh cong!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Loi ghi file!");
        }
    }
    
    public void docFile() {
        try {
            JFileChooser jc = new JFileChooser();
            int chon = jc.showSaveDialog(this);
            if (chon == 0) {
                String path = jc.getSelectedFile().getPath();
                FileInputStream fi = new FileInputStream(path);
                ObjectInputStream ifi = new ObjectInputStream(fi);
                list = (ArrayList<SanPham>) ifi.readObject();
                ifi.close();
                
                fillTable();
                
                JOptionPane.showMessageDialog(this,  "Doc file thanh cong!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Doc ghi file!");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGhi;
    private javax.swing.JButton btnMo;
    private javax.swing.JButton btnThem;
    private javax.swing.JComboBox<String> cboDonVi;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblThoiGian;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtTenSanPham;
    // End of variables declaration//GEN-END:variables
}
